<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Add roduct to cart scenario" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="reffer_to" elementType="Argument">
            <stringProp name="Argument.name">reffer_to</stringProp>
            <stringProp name="Argument.value">ecNou3L9grsA3xWhD0HrxY1Fz_4BeBcQIm4xMYgbPuo-1666813833-0-gaNycGzNDNE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="md" elementType="Argument">
            <stringProp name="Argument.name">md</stringProp>
            <stringProp name="Argument.value">OcJ86xUTxHSlH2UGsNlfFmuiYIMqzJrVXnS8lrTt1IA-1666813833-0-ARVCOz7xpeXATMHcS2vvRfBfiYOAaorQ-XSSKUBgvUtmdVSvzGoj6r321MWGZDHvMli8wPohAhSdNVvHHmOwwAFxlD2-pq2bVzwwQxYiSOOWUBwUXJW9ErSbI801oBmghVQNK9IjayxnJrhB-Bf2O4Z35FGB_ODjVPrYRYBeQYkS1JVXK2dWP9ttH1N9mbNAM-M1a2AHUTI85FEy__y_ELuX0OpHikgHElB_f3mxYPXLsyRPukDJ1-TeW5ph6iH3HVLzxVYtJ559kt7tkaqiMQJexnj7p-x3FJ3KCf5V5dBt5ROfd_pORxMnCV4fwmTNmikdOiYR7nKIfTXTRalCMANZ9Asqy-VAKpw3uGGsIPdCABNlONfOne9pCv85-zpsczO0YLZ-Tr-CuJBroS3GLYv8sLTHq8_B2THho6BjNKGBmlv_36yhRbgtYH0AVo40mtYTG4JV5khMw_ALbPtYk1V2SHZ2jXDXmOsnEuCt5FLvtdsw8Yu8mVIeDldPyuPwTX_cAqWprRxNtc9UdSHkS7UFLmHxOnG0ZtZHEku3XMs7cgAlwyowkHTqPFwTErxAww06r1dyyOWYf9Sbip3Q8rO-sbCzTq1vsXg9PSMlUrzLib4GtOtEILXWU6ucuebKAw</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="r" elementType="Argument">
            <stringProp name="Argument.name">r</stringProp>
            <stringProp name="Argument.value">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</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sh" elementType="Argument">
            <stringProp name="Argument.name">sh</stringProp>
            <stringProp name="Argument.value">d340772c2ead7a5e7269c2e36a8e370f</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aw" elementType="Argument">
            <stringProp name="Argument.name">aw</stringProp>
            <stringProp name="Argument.value">WvBxRGFWchlr-16-7605b8be3f47b359</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cf_ch_cp_return" elementType="Argument">
            <stringProp name="Argument.name">cf_ch_cp_return</stringProp>
            <stringProp name="Argument.value">9b78508698cbe4946491a83fb6462f8e|{&quot;managed_clearance&quot;:&quot;ni&quot;}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET - base page" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="md" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">md</stringProp>
                <stringProp name="Argument.value">${md}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="r" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">r</stringProp>
                <stringProp name="Argument.value">${r}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sh" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sh</stringProp>
                <stringProp name="Argument.value">${sh}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="aw" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">aw</stringProp>
                <stringProp name="Argument.value">${aw}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cf_ch_cp_return" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cf_ch_cp_return</stringProp>
                <stringProp name="Argument.value">${cf_ch_cp_return}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demo.nopcommerce.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com/?__cf_chl_tk=${reffer_to}</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en,ru;q=0.9,kk;q=0.8,en-GB;q=0.7,en-US;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cf_clearance" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">cf_clearance</stringProp>
            <stringProp name="RegexExtractor.regex">Set-Cookie: cf_clearance=(.+?);</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Nop.Customer&#x9;" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">Nop_Customer</stringProp>
            <stringProp name="RegexExtractor.regex">.Nop.Customer:(.+?)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Nop.Culture" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">Nop_Culture</stringProp>
            <stringProp name="RegexExtractor.regex">.Nop.Culture:(.+?)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Nop.Antiforgery" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">Nop_Antiforgery</stringProp>
            <stringProp name="RegexExtractor.regex">.Nop.Antiforgery:(.+?)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">log.info(&quot;----------------------------------&quot; + vars.get(&quot;cf_clearance&quot;));
log.info(&quot;----------------------------------&quot; + vars.get(&quot;Nop_Customer&quot;));
log.info(&quot;----------------------------------&quot; + vars.get(&quot;Nop_Culture&quot;));
log.info(&quot;----------------------------------&quot; + vars.get(&quot;Nop_Antiforgery&quot;));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET - search" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="q" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">q</stringProp>
                <stringProp name="Argument.value">Mac</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demo.nopcommerce.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en,ru;q=0.9,kk;q=0.8,en-GB;q=0.7,en-US;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies">
              <elementProp name="cf_clearance" elementType="Cookie" testname="cf_clearance">
                <stringProp name="Cookie.value">b6816f01b112c89c3e88d0e53871ec479b49ae1e</stringProp>
                <stringProp name="Cookie.domain">.nopcommerce.com</stringProp>
                <stringProp name="Cookie.path">/</stringProp>
                <boolProp name="Cookie.secure">true</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
              <elementProp name=".Nop.Customer" elementType="Cookie" testname=".Nop.Customer">
                <stringProp name="Cookie.value">a61fb14152ae58b4934a7cfd980d677d7fd4352e</stringProp>
                <stringProp name="Cookie.domain">demo.nopcommerce.com</stringProp>
                <stringProp name="Cookie.path">/</stringProp>
                <boolProp name="Cookie.secure">true</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
              <elementProp name=".Nop.Culture" elementType="Cookie" testname=".Nop.Culture">
                <stringProp name="Cookie.value">c%3Den-US%7Cuic%3Den-US</stringProp>
                <stringProp name="Cookie.domain">demo.nopcommerce.com</stringProp>
                <stringProp name="Cookie.path">/</stringProp>
                <boolProp name="Cookie.secure">false</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
              <elementProp name=".Nop.Antiforgery" elementType="Cookie" testname=".Nop.Antiforgery">
                <stringProp name="Cookie.value">CfDJ8Dhukxn1uxhNtwmV85iMKgcjNHk_ql_BIssJFyo1QUAecYBwIBai9Zo7n94m0KANJM6OrjOxfWYyZjkoe1DTme3Das-HVEvI78US2pjAjqoQ48PP3EnTdhLtKFN-54smdZIMwFlAWqELelW-00Zc8MM</stringProp>
                <stringProp name="Cookie.domain">demo.nopcommerce.com</stringProp>
                <stringProp name="Cookie.path">/</stringProp>
                <boolProp name="Cookie.secure">true</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
              <elementProp name=".Nop.Authentication" elementType="Cookie" testname=".Nop.Authentication">
                <stringProp name="Cookie.value">CfDJ8Dhukxn1uxhNtwmV85iMKgfY0CA27OnHDMnUnr1p5Oa_EmWQeVFd6NbGn4acWKlnm1RbwOetL6cQfrTTKmAfxUcUgC1_1m0OH5OAG</stringProp>
                <stringProp name="Cookie.domain"></stringProp>
                <stringProp name="Cookie.path"></stringProp>
                <boolProp name="Cookie.secure">false</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
            </collectionProp>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET - item page" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demo.nopcommerce.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apple-macbook-pro-13-inch</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com/search?q=Mac</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en,ru;q=0.9,kk;q=0.8,en-GB;q=0.7,en-US;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST - add product to cart" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="addtocart_4.EnteredQuantity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">addtocart_4.EnteredQuantity</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                <stringProp name="Argument.value">CfDJ8Dhukxn1uxhNtwmV85iMKgedt7cGPXx_STfEXwBzkaeJ8HSR0RSAxYP-3SNFMCM3lz30S9cHoLCYv5bOiDK3sbtvQ-cAEzSbfmR3QOoG0x-9H7OIa_6c8EuskhxPuFnsQxyZe7lLexqczmATw1P-bn9bjTn0c5JQmMMzO_1Cb-aLwaoHHpm1M_UhGZ6S6HbJvw</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demo.nopcommerce.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addproducttocart/details/4/1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com/apple-macbook-pro-13-inch</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en,ru;q=0.9,kk;q=0.8,en-GB;q=0.7,en-US;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET  - cart page" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demo.nopcommerce.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cart</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://demo.nopcommerce.com/apple-macbook-pro-13-inch</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en,ru;q=0.9,kk;q=0.8,en-GB;q=0.7,en-US;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
